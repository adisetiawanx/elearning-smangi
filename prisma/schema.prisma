// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Major {
  IPA
  IPS
  BAHASA
}

model Administrator {
  id            String  @id @default(cuid())
  email         String  @unique
  name          String
  password      String
  profile_image String?
  phone         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Teacher {
  id            String  @id @default(cuid())
  email         String  @unique
  name          String
  password      String
  nuptk         String
  profile_image String?
  phone         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Subject    Subject[]
  Material   Material[]
  Assignment Assignment[]
}

model Student {
  id            String  @id @default(cuid())
  email         String  @unique
  name          String
  password      String
  nis           String
  profile_image String?
  phone         String?
  class_id      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Class Class? @relation(fields: [class_id], references: [id], onDelete: SetNull)

  StudentAssigment StudentAssigment[]
}

model StudentAssigment {
  id           String  @id @default(cuid())
  description  String?
  grade        Int?
  proof_image  String?
  student_id   String?
  assigment_id String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  MediaFile MediaFile[]
  Student   Student?    @relation(fields: [student_id], references: [id], onDelete: SetNull)
  Assigment Assignment? @relation(fields: [assigment_id], references: [id], onDelete: SetNull)
}

model Class {
  id    String @id @default(cuid())
  name  String @unique
  major Major

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Student    Student[]
  Subject    Subject[]
  Material   Material[]
  Assignment Assignment[]
}

model Subject {
  id   String @id @default(cuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  class_id   String?
  teacher_id String?

  Class      Class?       @relation(fields: [class_id], references: [id], onDelete: SetNull)
  Teacher    Teacher?     @relation(fields: [teacher_id], references: [id], onDelete: SetNull)
  Material   Material[]
  Assignment Assignment[]
}

model Material {
  id         String  @id @default(cuid())
  title      String
  content    String
  class_id   String?
  subject_id String?
  teacher_id String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  MediaFile MediaFile[]
  Class     Class?      @relation(fields: [class_id], references: [id], onDelete: SetNull)
  Subject   Subject?    @relation(fields: [subject_id], references: [id], onDelete: SetNull)
  Teacher   Teacher?    @relation(fields: [teacher_id], references: [id], onDelete: SetNull)
}

model Assignment {
  id         String   @id @default(cuid())
  title      String
  content    String
  deadline   DateTime
  subject_id String?
  teacher_id String?
  class_id   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  MediaFile        MediaFile[]
  Class            Class?             @relation(fields: [class_id], references: [id], onDelete: SetNull)
  Subject          Subject?           @relation(fields: [subject_id], references: [id], onDelete: SetNull)
  Teacher          Teacher?           @relation(fields: [teacher_id], references: [id], onDelete: SetNull)
  StudentAssigment StudentAssigment[]
}

model MediaFile {
  id   String @id @default(cuid())
  name String
  url  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Material         Material[]
  Assignment       Assignment[]
  StudentAssigment StudentAssigment[]
}
